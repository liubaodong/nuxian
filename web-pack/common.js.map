{"version":3,"sources":["webpack:///./src/pages/$services/auth/auth.service.ts","webpack:///./src/pages/$services/canActivate/routeguard.service.ts","webpack:///./src/pages/$services/evaluation/evaluation.service.ts","webpack:///./src/pages/user-care/evaluation/start-evaluation/start-evaluation.service.ts","webpack:///./src/pages/user-care/view-report/check-report/check-report.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {Http} from '../../../services/http/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  static get UserID() {\n    const current = localStorage.getItem('UserCurrent');\n    if (current) {\n      const user = JSON.parse(current);\n      return user.UserID;\n    } else {\n      return 0;\n    }\n  }\n\n  constructor(public http: Http) { }\n\n  isLogin() {\n    const token = localStorage.getItem('Token');\n    const userStr = localStorage.getItem('UserCurrent');\n    if (userStr) {\n      const userP: any = JSON.parse(userStr);\n      // console.log('userP', userP);\n      const now = new Date();\n      const time = new Date(userP.time);\n      const gap = Math.floor((now.getTime() - time.getTime()) / (60 * 1000));\n      if (gap < 240) {\n        if (token) {\n          localStorage.setItem('Token', token);\n          const user = JSON.stringify({ UserID: userP.UserID, time: new Date() });\n          localStorage.setItem('UserCurrent', user);\n          this.http.requestOptioner.$extend({\n            headers: {Authorization: 'Token ' + token}\n          }, true);\n          return true;\n        } else {\n          localStorage.setItem('Token', '');\n          localStorage.setItem('UserCurrent', '');\n          return false;\n        }\n      } else {\n        localStorage.setItem('Token', '');\n        localStorage.setItem('UserCurrent', '');\n        return false;\n      }\n    } else {\n      localStorage.setItem('Token', '');\n      localStorage.setItem('UserCurrent', '');\n      return false;\n    }\n  }\n\n  // 登录\n  login(username: any, password: any) {\n    return new Promise((resolve, reject) => {\n      this.http.call('login', {\n        username: username,\n        password: password,\n        client: 0\n      }).then(resp => {\n        // console.log(resp);\n        if (resp.error_code === 0) {\n          localStorage.setItem('Token', resp.token);\n          localStorage.setItem('UserID', resp.user_id);\n          const user = JSON.stringify({ UserID: resp.user_id, time: new Date() });\n          localStorage.setItem('UserCurrent', user);\n          this.http.requestOptioner.$extend({\n            headers: {Authorization: 'Token ' + resp.token}\n          }, true);\n          resolve(resp);\n        } else {\n          reject(resp);\n        }\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  getUser(id: any) {\n    return new Promise((resolve, reject) => {\n      this.http.call('user', {id: id}).then(resp => {\n        resolve(resp);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n}\n\n\n\n","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {AuthService} from '../auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate {\n\n  constructor(private router: Router, public authService: AuthService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean{\n    // 返回值 true: 跳转到当前路由 false: 不跳转到当前路由\n    // 当前路由名称\n    const path = route.routeConfig.path;\n    // console.log('path', path);\n    // nextRoute: 设置需要路由守卫的路由集合\n    const nextRoute = ['user-care',\n      'evaluation',\n      'view-report',\n      'development-counseling',\n      'user-care/evaluation/assessment-list/:id/:ids/:index/:test',\n      'user-care/evaluation/start-evaluation/:id/:ids/:index/:test',\n      'user-care/evaluation/answer-evaluation/:id/:ids/:index/:test',\n      'user-care/view-report/check-report/:ids/:id/:test',\n      'user-care/development-counseling/confirm-payment/:id',\n      'user-care/evaluation/test-report',\n      'user-care/view-report/report-detail/:ids/:id/:test',\n      'user-care/development-counseling/expert-introduction',\n      'mine',\n      'mine/record-details/:id'];\n    const isLogin = this.authService.isLogin();  // 是否登录\n\n    // 当前路由是nextRoute指定页时\n    if (nextRoute.indexOf(path) >= 0) {\n      if (!isLogin) {\n        // 未登录，跳转到login\n        this.router.navigate(['auth/login']);\n        return false;\n      } else {\n        // 已登录，跳转到当前路由\n        return true;\n      }\n    }\n    // 当前路由是login时\n    if (path === 'auth/login') {\n      if (!isLogin) {\n        // 未登录，跳转到当前路由\n        return true;\n      } else {\n        // 已登录，跳转到home\n        this.router.navigate(['user-care/evaluation']);\n        return false;\n      }\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Http} from '../../../services/http/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EvaluationService {\n\n  constructor(protected http: Http) {\n  }\n\n  getMyProductList(user: any, isNull: any) {\n    return new Promise((resolve, reject) => {\n      this.http.call('userTestList', {end_date__isnull: isNull , user: user, limit: 1000}).then(resp => {\n        resolve(resp);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  // 获取产品表数据\n  getProductList(user) {\n    return new Promise((resolve, reject) => {\n      this.http.call('product', {user_id: user}).then(resp => {\n        resolve(resp);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  // 根据id获取产品\n  getProduct(id?: number) {\n    return new Promise((resolve, reject) => {\n      this.http.call('product', {id: id}).then(resp => {\n        resolve(resp);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  // 获取量表数据\n  getAssessmentList(ids: any) {\n    return new Promise((resolve, reject) => {\n      this.http.call('assessment', {id__in: ids}).then(resp => {\n        resolve(resp);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  // 获取章节\n  getContentList(id: number) {\n    return new Promise((resolve, reject) => {\n      this.http.call('ContentList', {'assessment': id}).then(resp => {\n        if (resp && resp.results[0]) {\n          resp.results[0].content_get.forEach(q => {\n            q.option = JSON.parse(q.option);\n            q.answers = [];\n            q.selected = '';\n            for (const o in q.option) {\n              q.answers.push({'option': o, 'title': q.option[o].title, 'is_fill': q.option[o].is_fill});\n            }\n          });\n        }\n        resolve(resp);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {Http} from '../../../../services/http/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StartEvaluationService {\n\n  constructor(protected http: Http) {\n  }\n\n  getAssessment(id) {\n    return new Promise((resolve, reject) => {\n      this.http.call('assessmentDetail', {id: id}).then(resp => {\n        resolve(resp);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  // 生成测试记录\n  postUserTest(id: any, start_date: any) {\n    return new Promise((resolve, reject) => {\n      const data = {\n        id: id,\n        start_date: this.formatDate(start_date)\n      };\n      this.http.call('UserTest', data).then(resp => {\n        resolve(resp);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  formatDate(date) {\n    const time = new Date(date);\n    const year = time.getFullYear();\n    let month: any = time.getMonth() + 1;\n    month = month >= 10 ? month : '0' + month;\n    let day: any = time.getDate();\n    day = day >= 10 ? day : '0' + day;\n    let hour: any = time.getHours();\n    hour = hour >= 10 ? hour : '0' + hour;\n    let minutes: any = time.getMinutes();\n    minutes = minutes >= 10 ? minutes : '0' + minutes;\n    let seconds: any = time.getSeconds();\n    seconds = seconds >= 10 ? seconds : '0' + seconds;\n    // console.log('year-month-day', year, month, day);\n    return year + '-' + month + '-' + day + ' ' + hour + ':' + minutes + ':' + seconds;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Http} from '../../../../services/http/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckReportService {\n\n  constructor(public http: Http) {\n  }\n\n  // 获取报告列表\n  getReportType() {\n    return new Promise((resolve, reject) => {\n      this.http.call('appraiserTitle').then(resp => {\n        resolve(resp);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  // 获取系统配置\n  getSystemConfig(field_name: any) {\n    return new Promise((resolve, reject) => {\n      this.http.call('systemConfig', {field_name: field_name}).then(resp => {\n        resolve(resp.results[0]);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  // 创建订单\n  createOrder(appraiser_title_id: any, price: any, product_id: any, user_id: any) {\n    return new Promise((resolve, reject) => {\n      this.http.call('createOrder', {\n        appraiser_title_id: appraiser_title_id,\n        price: price,\n        product_id: product_id,\n        user_id: user_id\n      }).then(resp => {\n        resolve(resp);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n}\n"],"sourceRoot":""}