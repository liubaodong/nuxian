{"version":3,"sources":["webpack:///./src/pages/$services/auth/auth.service.ts","webpack:///./src/pages/$services/canActivate/routeguard.service.ts","webpack:///./src/pages/$services/data/paginator.ts","webpack:///./src/pages/project-management/project-management.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {Http} from '../../../services/http/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  static get UserID() {\n    const current = localStorage.getItem('UserCurrent');\n    // console.log('current', current)\n    if (current) {\n      const user = JSON.parse(current);\n      return user.UserID;\n    } else {\n      return 0;\n    }\n  }\n\n  constructor(public http: Http) { }\n\n  isLogin() {\n    const token = localStorage.getItem('Token');\n    const userStr = localStorage.getItem('UserCurrent');\n    if (userStr) {\n      const userP: any = JSON.parse(userStr);\n      // console.log('userP', userP);\n      const now = new Date();\n      const time = new Date(userP.time);\n      const gap = Math.floor((now.getTime() - time.getTime()) / (60 * 1000));\n      if (gap < 240) {\n        if (token) {\n          localStorage.setItem('Token', token);\n          const user = JSON.stringify({ UserID: userP.UserID, time: new Date() });\n          localStorage.setItem('UserCurrent', user);\n          this.http.requestOptioner.$extend({\n            headers: {Authorization: 'Token ' + token}\n          }, true);\n          return true;\n        } else {\n          localStorage.setItem('Token', '');\n          localStorage.setItem('UserCurrent', '');\n          return false;\n        }\n      } else {\n        localStorage.setItem('Token', '');\n        localStorage.setItem('UserCurrent', '');\n        return false;\n      }\n    } else {\n      localStorage.setItem('Token', '');\n      localStorage.setItem('UserCurrent', '');\n      return false;\n    }\n  }\n\n  // 登录\n  login(username: any, password: any) {\n    return new Promise((resolve, reject) => {\n      this.http.call('login', {\n        username: username,\n        password: password,\n        client: 1\n      }).then(resp => {\n        // console.log(resp);\n        if (resp.error_code === 0) {\n          localStorage.setItem('Token', resp.token);\n          localStorage.setItem('UserID', resp.user_id);\n          const user = JSON.stringify({ UserID: resp.user_id, time: new Date() });\n          localStorage.setItem('UserCurrent', user);\n          this.http.requestOptioner.$extend({\n            headers: {Authorization: 'Token ' + resp.token}\n          }, true);\n          resolve(resp);\n        } else {\n          reject(resp);\n        }\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  getUser(id: any) {\n    return new Promise((resolve, reject) => {\n      this.http.call('user', {id: id}).then(resp => {\n        resolve(resp);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n}\n\n\n\n","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {AuthService} from '../auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate {\n\n  constructor(private router: Router, public authService: AuthService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    // 返回值 true: 跳转到当前路由 false: 不跳转到当前路由\n    // 当前路由名称\n    const path = route.routeConfig.path;\n    // console.log('path', path);\n    // nextRoute: 设置需要路由守卫的路由集合\n    const nextRoute = ['project-management',\n      'launch-evaluation',\n      'management',\n      'quality-file',\n      'create-project-group',\n      'import-members/:id',\n      'create-order/:id',\n      'payment/:id'\n    ];\n    const isLogin = this.authService.isLogin();  // 是否登录\n    // console.log('isLogin', isLogin);\n    // console.log('nextRoute.indexOf(path) >= 0', nextRoute.indexOf(path) >= 0);\n    // 当前路由是nextRoute指定页时\n    if (nextRoute.indexOf(path) >= 0) {\n      if (!isLogin) {\n        // 未登录，跳转到login\n        this.router.navigate(['auth/login']);\n        return false;\n      } else {\n        // 已登录，跳转到当前路由\n        return true;\n      }\n    }\n    // 当前路由是login时\n    if (path === 'auth/login') {\n      if (!isLogin) {\n        // 未登录，跳转到当前路由\n        return true;\n      } else {\n        // 已登录，跳转到home\n        this.router.navigate(['project-management']);\n        return false;\n      }\n    }\n  }\n}\n","import {MatPaginatorIntl} from '@angular/material';\r\n\r\nexport class MyPaginator {\r\n  length = 10;\r\n  constructor(private matPaginatorIntl: MatPaginatorIntl) {\r\n\r\n  }\r\n\r\n  setPaginator(): MatPaginatorIntl {\r\n    // 設定顯示笔數資訊文字\r\n    this.matPaginatorIntl.getRangeLabel = (page: number, pageSize: number, length: number): string => {\r\n      if (length === 0 || pageSize === 0) {\r\n        return `共 ${Math.ceil(length / 10)} 页`; // ，当前第${page + 1}页\r\n      }\r\n\r\n      length = Math.max(length, 0);\r\n      const startIndex = page * pageSize;\r\n      const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\r\n\r\n      return `共 ${Math.ceil(length / 10)} 页`; // ，当前第${page + 1}页\r\n    };\r\n\r\n    // 設定其他顯示資訊文字\r\n    this.matPaginatorIntl.itemsPerPageLabel = '每页条数：';\r\n    this.matPaginatorIntl.nextPageLabel = '下一页';\r\n    this.matPaginatorIntl.previousPageLabel = '上一页';\r\n    this.matPaginatorIntl.firstPageLabel = '移到首页';\r\n    this.matPaginatorIntl.lastPageLabel = '移到尾页';\r\n    return this.matPaginatorIntl;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {Http} from '../../services/http/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectManagementService {\n\n  constructor(protected http: Http) {\n  }\n\n  // 获取产品\n  getProductList(data: any) {\n    return new Promise((resolve, reject) => {\n      this.http.call('products', data).then(resp => {\n        resolve(resp.results);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n}\n"],"sourceRoot":""}